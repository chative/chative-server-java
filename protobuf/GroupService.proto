syntax = "proto2";

option java_multiple_files = true;
option java_package = "org.whispersystems.textsecuregcm.internal.groups";

import "common.proto";
import "InternalAccountsService.proto";

message KickoutResponse {
  message ResultInfo {
    required string number = 1;
    optional string result = 2;
  }

  repeated ResultInfo resultInfos = 1;
}

message GroupsInfo {
  optional string id = 1;
  optional string name = 2;
  optional string creator = 3;
  optional int64 createTime = 4;
  optional int32 status = 5;
  optional int64 messageExpiry = 6;
  optional string avatar = 7;
  optional int32 version = 8;
  optional int32 invitationRule = 9;
  optional int64  lastActiveTime = 10;
  optional string owner = 11;
  optional string backup1 = 12;
  optional string backup2 = 13;
  optional string remindCycle = 14;
}

message GroupMemberInfo {
  required string uid = 1;
  required string gid = 2;
  optional string role = 3;
  optional string avatar = 4;
  optional string inviter = 5;
  optional string plainName = 6;
  optional string displayName = 7;
  optional string remark = 8;
  optional string notification = 9;
  optional string email = 10;
  optional string oktaId = 11;
}

message GroupsRequest {
  optional Step step = 1;
  optional GroupsInfo groupInfo = 2;
}

message GroupsResponse {
  optional uint64 total = 1;
  repeated GroupsInfo groupsInfo = 2;
}

message GroupsCreateRequest {
  required GroupsInfo groupsInfo = 1;
  repeated string members = 2;
}

message GroupsAnnouncementRequest {
  required string content = 1;
  required string gid = 2;
}

message GroupMembersResponse {
  repeated GroupMemberInfo groupMemberInfo = 1;
}

message GroupAvatarRequest{
  required string gid           = 1;
  required string operator      = 2;
  required bytes  avatarContent = 3;
}

message GroupJoinRequest {
  repeated GroupsCreateRequest groupCreateRequest = 1;
}

service GroupService {
  rpc kickoutAllGroupForUser(UidsRequest) returns (BaseResponse);
  rpc getAll(GroupsRequest) returns (GroupsResponse);
  rpc create(GroupsCreateRequest) returns (BaseResponse);
  rpc join(GroupsCreateRequest) returns (BaseResponse);
  rpc leave(GroupsCreateRequest) returns (BaseResponse);
  rpc edit(GroupsRequest) returns (BaseResponse);
  rpc announcement(GroupsAnnouncementRequest) returns (BaseResponse);
  rpc getGroupMembers(GroupsRequest) returns (BaseResponse);
  rpc getMyGroups(GroupsRequest) returns (BaseResponse);
  rpc changeRole(GroupMembersResponse) returns (BaseResponse);
  rpc bulkJoin(GroupJoinRequest) returns (BaseResponse);
  rpc uploadAvatar(GroupAvatarRequest) returns (BaseResponse);
}
